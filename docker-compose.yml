services:

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:9.0.2'
    container_name: 'elasticsearch'
    restart: 'unless-stopped'
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    healthcheck:
      test: 'curl -f http://localhost:9200 || exit 1'

  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.8.0'
    container_name: 'zookeeper'
    restart: 'unless-stopped'
    ports:
      - '2181:2181'
    environment:
      - 'ZOOKEEPER_CLIENT_PORT=2181'
    healthcheck:
      test: 'echo stat | nc localhost $$ZOOKEEPER_CLIENT_PORT'

  kafka:
    image: 'confluentinc/cp-kafka:7.8.0'
    container_name: 'kafka'
    restart: 'unless-stopped'
    depends_on:
      - 'zookeeper'
    ports:
      - '29092:29092'
    environment:
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092'
      - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]

  schema-registry:
    image: 'confluentinc/cp-schema-registry:7.8.0'
    container_name: 'schema-registry'
    restart: 'unless-stopped'
    depends_on:
      - 'kafka'
    ports:
      - '8081:8081'
    environment:
      - 'SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092'
      - 'SCHEMA_REGISTRY_HOST_NAME=schema-registry'
      - 'SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081'
    healthcheck:
      test: 'curl -f http://localhost:8081 || exit 1'

  schema-registry-ui:
    image: 'landoop/schema-registry-ui:0.9.5'
    container_name: 'kafka-schema-registry-ui'
    depends_on:
      - 'schema-registry'
    ports:
      - '8001:8000'
    environment:
      - 'SCHEMAREGISTRY_URL=http://schema-registry:8081'
      - 'PROXY=true'
    healthcheck:
      test: 'wget --quiet --tries=1 --spider http://localhost:8000 || exit 1'

  kafka-rest-proxy:
    image: 'confluentinc/cp-kafka-rest:7.8.0'
    container_name: 'kafka-rest-proxy'
    restart: 'unless-stopped'
    depends_on:
      - 'zookeeper'
      - 'kafka'
    ports:
      - '8082:8082'
    environment:
      - 'KAFKA_REST_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092'
      - 'KAFKA_REST_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_REST_HOST_NAME=kafka-rest-proxy'
      - 'KAFKA_REST_LISTENERS=http://0.0.0.0:8082'
      - 'KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS=30000'
    healthcheck:
      test: 'curl -f http://localhost:8082 || exit 1'

  kafka-topics-ui:
    image: 'landoop/kafka-topics-ui:0.9.4'
    container_name: 'kafka-topics-ui'
    restart: 'unless-stopped'
    depends_on:
      - 'kafka-rest-proxy'
    ports:
      - '8085:8000'
    environment:
      - 'KAFKA_REST_PROXY_URL=http://kafka-rest-proxy:8082'
      - 'PROXY=true'
    healthcheck:
      test: 'wget --quiet --tries=1 --spider http://localhost:8000 || exit 1'

  kafka-manager:
    image: 'hlebalbau/kafka-manager:3.0.0.5'
    container_name: 'kafka-manager'
    restart: 'unless-stopped'
    depends_on:
      - 'zookeeper'
    ports:
      - '9001:9000'
    environment:
      - 'ZK_HOSTS=zookeeper:2181'
      - 'APPLICATION_SECRET=random-secret'
    command: '-Dpidfile.path=/dev/null'
    healthcheck:
      test: 'curl -f http://localhost:9000 || exit 1'

  zipkin:
    image: 'openzipkin/zipkin:3.5.0'
    container_name: 'zipkin'
    restart: 'unless-stopped'
    ports:
      - '9411:9411'
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9411" ]
